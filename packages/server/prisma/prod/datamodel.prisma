enum NotificationAction {
  ANSWERED
  UPVOTE
}
type User {
  id: ID! @unique
  facebookId: String @unique
  googleId: String @unique
  userName: String
  email: String @unique
  avatar: String
  MyQuestions: [Question!]!
  MyAnswers: [Answer!]!
  MyInternships: [Internship!]!
  Notifications: [Notification!]!
    @relation(name: "UserNotifications", onDelete: CASCADE)
  createdAt: DateTime!
  updatedAt: DateTime!
  repScore: Int! @default(value: "0")
}
type Question {
  id: ID! @unique
  header: String!
  body: String
  askedBy: User!
  answers: [Answer!]! @relation(name: "AnswersOfQuestion", onDelete: CASCADE)
  createdAt: DateTime!
  updatedAt: DateTime!
}
type Answer {
  id: ID! @unique
  body: String!
  answeredBy: User!
  answeredTo: Question! @relation(name: "AnswersOfQuestion")
  createdAt: DateTime!
  updatedAt: DateTime!
}
type Internship {
  id: ID! @unique
  title: String!
  location: String!
  description: String
  postedBy: User!
  avatar: String
  tags: [Tag!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}
type Tag {
  id: ID! @unique
  name: String! @unique
}
type Notification {
  id: ID! @unique
  notifier: User! @relation(name: "UserNotifications")
  read: Boolean! @default(value: "false")
  action: NotificationAction!
  actors: [User!]! @relation(name: "UsersInNotification")
  createdAt: DateTime!
  updatedAt: DateTime!
}
