#import * from "../../generated/prisma.graphql"

interface Count {
  count: Int!
}

type User {
  id: ID!
  userName: String
  avatar: String
  MyQuestions: [Question!]!
  MyAnswers: [Answer!]!
  repScore: Int!
}

type Question {
  id: ID!
  header: String!
  body: String
  askedBy: User!
  answers(orderBy: AnswerOrderByInput, first: Int, skip: Int): [Answer!]!
  totalAnswers: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Internships implements Count {
  count: Int!
  items: [Internship!]!
}

type Questions implements Count {
  count: Int!
  items: [Question!]!
}

type Query {
  me: User!
  question(id: ID!): Question!
  questionsFeed(
    skip: Int
    first: Int
    orderBy: QuestionOrderByInput
    where: QuestionWhereInput
  ): Questions!
  internshipsFeed(
    skip: Int
    first: Int
    orderBy: InternshipOrderByInput
    where: InternshipWhereInput
  ): Internships!
  tags(first: Int, where: TagWhereInput): [Tag!]!
}

type Mutation {
  createQuestion(header: String!, body: String): Question!
  createAnswer(questionId: ID!, body: String!): Answer!
  createTag(name: String!): Tag!
  logout: Boolean
}
